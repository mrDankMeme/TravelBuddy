# fastlane/Fastfile
default_platform(:ios)

platform :ios do
  desc "UI Snapshots on simulator"
  lane :snapshots do
    # ⛑️ Увеличим время ожидания получения build settings (у тебя тут таймаутило)
    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "180" # сек
    ENV["FASTLANE_XCODEBUILD_SETTINGS_RETRIES"] = "2"

    # Абсолютный путь к .xcodeproj (так надежнее, т.к. Fastfile лежит в fastlane/)
    project_path = File.expand_path("../TravelBuddy.xcodeproj", __dir__)

    # 1) Прогреть SPM (в CI это ускоряет snapshot, локально тоже полезно)
    sh %(
      xcodebuild -resolvePackageDependencies \
        -project "#{project_path}" \
        -onlyUsePackageVersionsFromResolvedFile \
        -disableAutomaticPackageResolution
    )

    # 2) Снимки — запускаем ТОЛЬКО наш класс снапшотов
    snapshot(
      project: project_path,
      scheme:  "TravelBuddy",

      # Запускаем только нужный класс/таргет UI-тестов
      test_target_name: "TravelBuddyUITests",
      only_testing:     ["TravelBuddyUITests/TravelBuddySnapshotUITests"],

      # Вывод/артефакты
      output_directory: "fastlane/screenshots",
      derived_data_path: "fastlane/DerivedData",
      result_bundle: false,          # чтобы ретраи не падали на "Existing file at -resultBundlePath"
      number_of_retries: 0,
      xcodebuild_formatter: "xcbeautify",

      # Сборка/симулятор
      reinstall_app: true,           # каждый прогон — чистое приложение (но без wipe DerivedData)
      clean: false,
      erase_simulator: false,
      concurrent_simulators: false,
      headless: true,
      override_status_bar: true,

      # SPM
      skip_package_dependencies_resolution: true,
      disable_package_automatic_updates: true,

      # Флаги в приложение — включаем режим UI-тестов и локальные данные
      launch_arguments: ["-uiTesting", "1", "-uiMockData", "1"]
    )
  end
end
