# fastlane/Fastfile
# NOTE:
# - НЕ чистим DerivedData (ни clear_derived_data, ни clean: true)
# - Быстро за счёт кэша SwiftPM в CI (см. workflow)
# - Переустановка приложения на симуляторе каждый прогон (reinstall_app: true)
# - Симулятор целиком НЕ стираем (erase_simulator: false)
# - Предварительный резолвинг пакетов (xcodebuild -resolvePackageDependencies)
# - Если у тебя workspace → замени project: на workspace: (и наоборот)

default_platform(:ios)

platform :ios do
  desc "Run UI snapshot tests and export screenshots"
  lane :snapshots do
    # ВАЖНО: не делаем clear_derived_data — ты просил не трогать DerivedData
    # clear_derived_data

    # Прогреваем Swift Packages (использует кэш SPM из CI)
    # Если у тебя .xcworkspace — замени -project на -workspace и добавь -scheme.
    sh %(
  xcodebuild -resolvePackageDependencies \
    -project TravelBuddy.xcodeproj \
    -onlyUsePackageVersionsFromResolvedFile \
    -disableAutomaticPackageResolution
     )


    snapshot(
      # >>> Проверь названия под свой проект <<<
      project: "TravelBuddy.xcodeproj",         # или: workspace: "TravelBuddy.xcworkspace"
      scheme: "TravelBuddy",                    # схема, которая собирает App + UITests

      # Куда складывать PNG
      output_directory: "fastlane/screenshots",

      # DerivedData для ЭТОГО запуска (мы его НЕ чистим и НЕ кэшируем в данном лейне)
      derived_data_path: "fastlane/DerivedData",

      # Стабильность / скорость
      clean: false,                # ← БЕЗ clean (сборка не чистится)
      reinstall_app: true,         # ← удаляем старое приложение и ставим новое каждый раз
      erase_simulator: false,      # симулятор целиком не вайпаем (быстрее)
      concurrent_simulators: false,# последовательно — меньше флапов

      # SwiftPM: snapshot не будет резолвить пакеты заново (берём из прогретого кэша)
      skip_package_dependencies_resolution: true,
      disable_package_automatic_updates: true,

      # Логи/артефакты
      result_bundle: true,
      xcargs: "-quiet"
    )
  end
end
